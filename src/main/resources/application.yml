spring:
  application:
    name: wheretopop-api
  profiles:
    active: ${ACTIVE_PROFILE:dev}
  r2dbc:
    url: r2dbc:mariadb://${DB_HOST:localhost}:${DB_PORT:3306}/${MYSQL_DATABASE:wheretopop}?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
    username: ${MYSQL_USER:root}
    password: ${MYSQL_PASSWORD:password}
    pool:
      initial-size: 5
      max-size: 10
      max-idle-time: 30m
  data:
    r2dbc:
      repositories:
        enabled: true
  elasticsearch:
    uris: http://${ES_HOST:localhost}:${ES_PORT:9200}
  ai:
    mcp:
      server:
        name: where-to-pop
        type: async
        sse-endpoint: /mcp/sse
        sse-message-endpoint: /mcp/message
        enabled: true
      client:
        enabled: true
        initialized: true
        request-timeout: 30s
        toolcallback:
          enabled: true
        type: async

    openai:
      api-key: ${OPENAI_API_KEY:your_openai_or_gcp_key}
      base-url: https://generativelanguage.googleapis.com/v1beta/openai
      #      base-url: https://api.openai.com/v1
      chat:
        completions-path: /chat/completions
        options:
          #          model: gpt-4o
          model: gemini-2.0-flash
      #        NOTE: gemini에서 api-key를 통한 인증을 java client에서 지원하지 않음. gcp를 통한 인증을 해야함
      #        따라서 https://ai.google.dev/gemini-api/docs/openai?hl=ko openai 호환을 활용해 호출
      #        https://github.com/spring-projects/spring-ai/issues/1252
      embedding:
        base-url: https://generativelanguage.googleapis.com/v1beta/models
        options:
          #          model: text-embedding-ada-002
          model: gemini-embedding-exp-03-07

    vectorstore:
      chroma:
        client:
          host: localhost
          port: 8000
        collection-name: popup_reviews
        initialize-schema: true

      pinecone:
        api-key: ${PINECONE_API_KEY:pinecone_key}
        host: ${PINECONE_HOST:pinecone_host}
        index-name: popup-infos

openapi:
  seoul:
    key: ${SEOUL_OPEN_DATA_API_KEY:your_key}
  korea:
    building-register:
      key: ${KOREA_BUILDING_REGISTER_OPEN_DATA_API_KEY:your_key}
  v-world:
    key: ${V_WORLD_OPEN_API_KEY:your_key}

selenium:
  chrome:
    headless: true
    arguments: --disable-gpu
scraping:
  target:
    url: https://popply.co.kr/popup
    selector:
      firstPopupLink: div.popuplist-board > ul:nth-of-type(1) > li:nth-of-type(1) div.popup-info-wrap > a
  wait:
    timeoutSeconds: 15

server:
  port: ${APP_PORT:8080}
  forward-headers-strategy: native

jwt:
  secret: ${JWT_SECRET:whereToPopSecretKeyForJwtTokenMustBeLongEnoughForHS256Algorithm}
  access-token-expiration: ${JWT_ACCESS_TOKEN_EXPIRATION:3600000} # 1시간
  refresh-token-expiration: ${JWT_REFRESH_TOKEN_EXPIRATION:604800000} # 7일
